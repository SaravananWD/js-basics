/* Project related CSS */

.input-form {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 30px;

}

input#textbox,
input#submit {
    background-color: rgba(0, 0, 0, .4);
    padding: 10px;
    color: #c0c0c0;
    width: 100%;
}

input#textbox {
    width: 80%;
    outline: none;
}

input#submit {
    background-color: rgba(0, 0, 0, .6);
    cursor: pointer;
    width: 20%;
    min-width: 150px;
    /* transition: background .3s; */
}

input#submit:hover {
    background-color: rgba(0, 0, 0, .9);
    background-color: rgb(0 90 179 / 60%);
}

.todo-container {
    padding-bottom: 5px;
}

.todo-container h3,
.todo-container h3 span {
    font-size: 1rem;
    font-weight: 500;
    color: rgba(255, 255, 255, .6);
}

.todo-container h3 span {
    /* font-style: italic; */
    color: rgba(255, 255, 255, .7);
    /* display: inline-block;
    background-color: rgba(0, 0, 0, .6);
    padding: 3px 5px;
    font-weight: bold;
    font-size: 1rem; */
    /* border-bottom: 1px solid #00ccff; */

}

.todo-item {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    margin-bottom: 15px;
}

.todo-text {
    width: 80%;
    /* font-weight: 600; */
    background: linear-gradient(to right, rgb(0 35 70 / 60%), #000);
    padding: 10px 12px;
    /* padding-left: 0; */
    color: #ccc;
}

.todo-item .buttons {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 20%;
}

.todo-item button {
    background-color: rgba(0, 0, 0, .3);
    padding: 10px 0;
    cursor: pointer;
    color: #b8b8b8;
    width: 100%;

}


.todo-item .btn-edit {
    background-color: rgba(0, 0, 0, .5);
}

.todo-item .btn-delete {
    background-color: rgba(0, 0, 0, .3);
}

.todo-item .btn-edit:hover {
    background-color: rgb(0 90 179 / 60%);
}

.todo-item .btn-delete:hover {
    background-color: rgb(179 0 0 / 60%);
}



/* js */

.empty-message {
    color: #ffc498;
    margin-bottom: 15px;
    display: none;
}

.todo-container {
    position: relative;
}

.alert-message {
    display: none;
    opacity: 0;
    text-align: center;
    width: 50%;
    margin: 0 auto;
    max-width: 50rem;
    background-color: #0e1844;
    /*serious 440e0e  normal 0e1844  positive 0e442e*/
    padding: 10px;
    color: rgba(255, 255, 255, .8);
    position: absolute;
    left: 0;
    right: 0;
    top: -60px;
    border-radius: 5px;
    box-shadow: 0 0 15px 3px rgba(0, 0, 0, .2);
    transition: opacity 0.3s ease-in-out, top 0.3s ease-in-out;
}


.todo-footer,
.clear-btn {
    display: none;
}



.todo-footer {
    padding-top: 15px;
}

.todo-footer p {
    margin-bottom: 10px;
    font-size: .9rem;
    color: rgba(255, 255, 255, .6);
    font-weight: 600;
}

.clear-btn,
.confirm-buttons button {
    background-color: #202020;
    color: #b8b8b8;
    font-weight: 600;
    padding: 5px 15px;
    min-width: 150px;
    font-size: .8rem;
    margin-bottom: 20px;
    cursor: pointer;
}

.confirm-buttons {
    display: none;
}

button.no-clear {
    background-color: #0e1844;
}



@media only screen and (max-width: 740px) {
    .todo-item {
        width: 100%;
        display: flex;
        flex-wrap: wrap;
    }

    .todo-text {
        width: 100%;
    }

    .todo-item .buttons {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
    }


    .alert-message {
        width: 80%;
    }

}

.task-title h3 {
    margin-bottom: 0;
}

.task-title {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 15px;
}

.history-btns {
    display: flex;
}

.history-btns button {
    background-color: #111;
    font-size: .8rem;
    font-weight: 600;
    padding: 2px 6px;
    margin: 0;
    margin-left: .4rem;
    min-width: 3.5rem;
    cursor: pointer;
}

.history-btns button:disabled {
    color: rgba(255, 255, 255, .4);
    cursor: default;
    opacity: .5;
}

/*

if (hindex > 0 ) show undo button
if (hindex < history.length-1) show redo button


hindex = -1 // no history retrieval yet
0 [x]
hindex = 0 // active index - latest
1 [x,x]
hindex = 1 // active index - latest
2 [x,x,x]
hindex = 2 // active index - latest
3 [x,x,x,x]
hindex = 3 // active index - latest

undo >> show last state - history[hindex-1]; history[2]
hindex--// hindex = 2 //
undo >> show last state - history[hindex-1]; history[1]
hindex--// hindex = 1 //
undo >> show last state - history[hindex-1]; history[0]
hindex--// hindex = 0 // 
hide undo button.

OGNL:
1 [x,x,x,x]
hindex = 3 // active index - latest

0 [x]
hindex = 0 // active index

redo >> show next state - history[hindex+1]; history[1]
hindex++// hindex = 1 //
redo >> show next state - history[hindex+1]; history[2]
hindex++// hindex = 2 //
redo >> show next state - history[hindex+1]; history[3]
hindex++// hindex = 3 // 
hide redo button.

*/